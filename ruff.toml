preview = true

exclude = []

lint.select = ["ALL"]

lint.ignore = [
    "ANN", # flake8-annotations
    "CPY", # Copyright
    "ARG", # flake8-unused-arguments
    "D", # pydocstyle
    "PLR6301",
    "B027",
    "S101", # Use of `assert` detected
    "ERA001", # Found commented-out code
    "S605", # Using a shell
    "I001", # Import block is un-sorted or un-formatted

#    "FIX", # flake8-fixme
#    "PERF", # Perflint
#    "PGH", # pygrep-hooks
#    "TD", # flake8-todos
#    "N999", # Invalid module name
#    "FURB140", # Use `itertools.starmap` instead of the generator
#    # Fix these
#    "DTZ005",
#    "DTZ007",
#    "F821",
#    "PD008",
#    "PD011", # Use `.to_numpy()` instead of `.values`
#    "PD901", # `df` is a bad variable name. Be kinder to your future self.
#    "PLR6301",
#    "PLR0911",
#    "PLW3201",
#    "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
#    "RUF100",
#    "S105", # Possible hardcoded password assigned
#    "S106", # Possible hardcoded password assigned
#    # Ignore these
#    "A001", # Variable `...` is shadowing a python builtin
#    "A002", # Argument `...` is shadowing a python builtin
#    "A003", # Class attribute `...` is shadowing a python builtin
#    "COM812", # Missing trailing comma
#    "E203", # Whitespace before ':'"
#    "E501", # line too long
#    "E711", # comparison to None should be 'if cond is not None:'
#    "E712", # Comparison to True should be 'if cond is True:' or 'if cond:'
#    "ERA001", # [*] Found commented-out code
#    "F401", # 'module' imported but unused
#    "I001", # Import block is un-sorted or un-formatted
#    "PLC0415", # `import` should be at the top-level of a file
#    "PLC1901", # `X.x != ""` can be simplified to `X.x` as an empty string is falsey
#    "PLR2004", # Magic value used in comparison
#    "PLR2044",
#    "RET504", # Unnecessary variable assignment before `return` statement
#    "RET505", # Unnecessary `else` after `return` statement
#    "RUF001", # String contains ambiguous unicode character
#    "RUF005", # list concatenation
#    "S101", # Use of `assert` detected
#    "SIM108", # Use ternary operator
#    "T201", # `print` found
#    "T203", # `print` found
#    "TCH001", # Move import into a type-checking block
#    "TCH002", # Move import into a type-checking block
#    "TCH003", # Move import into a type-checking block
#    "TID252", # Relative imports from parent modules are banned
#    "TRY003", # Avoid specifying long messages outside the exception class
#    "EM102",
]
