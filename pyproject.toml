[tool.poetry]
name = "asciicast"
version = "0.1.0"
homepage = "https://github.com/sfermigier/asciicast"
description = "Top-level package for asciicast."
authors = ["Abilian SAS <sf@abilian.com>"]
readme = "README.rst"
classifiers=[
    'Development Status :: 2 - Pre-Alpha',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
]
packages = [
    { include = "asciicast", from = "src" },
    { include = "tests", format = "sdist" },
]


[tool.poetry.dependencies]
python = ">=3.9,<4"

attrs = "^22.2.0"
click = "^8.1.3"
asciinema = "^2.2.0"


[tool.poetry.group.dev.dependencies]
## Standard cruft
abilian-devtools = "*"
cruft = "*"
toml = "*"
## /standard cruft

snoop = "^0.4.3"
pytest = "^7.2.2"


[tool.isort]
profile = "black"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# pyproject.toml
[tool.pytest.ini_options]
addopts = "--tb=short"
testpaths = [
    "tests",
    "src",
]


[tool.pyanalyze]
paths = ["src/"]
import_paths = ["."]

# Additional checks
bare_ignore = true
missing_f = true
use_fstrings = true
value_always_true = true

# TODO: fix issues and activate
#unused_ignore = true
#enforce_no_unused = true
#incompatible_override = true
#missing_parameter_annotation = true
#missing_return_annotation = true
#suggested_parameter_type = true
#suggested_return_type = true
#use_fstrings = true
#value_always_true = true

# TODO: fix issues and remove
attribute_is_never_set = false
duplicate_dict_key = false
import_failed = false
impossible_pattern = false
incompatible_argument = false
incompatible_call = false
incompatible_return_value = false
internal_error = false
missing_return = false
possibly_undefined_name = false
undefined_attribute = false
unused_variable = false


[tool.deptry]
ignore_obsolete = [
]
ignore_missing = [
]
ignore_transitive = [
]
exclude = [
    '.tox', 'tests', 'sandbox', 'doc', 'scripts',
]


[tool.pyright]
exclude = [
    '.tox',
    '.nox',
    'tests',
    'sandbox',
    'doc',
    'scripts',
    'tmp',
]
include = ["src"]

# pyright has issues with modules imported from a root __init__.py
reportPrivateImportUsage = false

# Temp
reportGeneralTypeIssues = false
reportMissingImports = false
reportOptionalSubscript = false

